{
    "summary": "This code defines functions for printing and checking data structures, validates JSON input, extracts lists/dictionaries, performs actions on them, tracks pass/fail assertions.",
    "details": [
        {
            "comment": "This code defines multiple functions for printing and checking data structures containing information about activities, individuals, shows, staff types, and favorites. The \"checkList\" function checks if each element in a list is a dictionary with an 'id' key.",
            "location": "\"/media/root/Prima/works/generated_docs/autoup_doc/src/poster/uploader/extract_channels.py\":0-34",
            "content": "import json\nobj = None\ndef walk_type(x):\n    for t in x:\n        print(\"id:\",t[\"id\"],\"name:\",t[\"name\"],\"desc:\",t[\"desc\"])\n        if \"children\" in t.keys():\n            walk_type(t[\"children\"])\ndef walk_fav(x):\n    y = x[\"typelist\"]\n    for t in y:\n        print(\"id:\",t[\"id\"],\"name:\",t[\"name\"],\"desc:\",t[\"desc\"])\ndef walk_staff(s):\n    y = s[\"typelist\"]\n    for x in y:\n        print(\"typeid:\",x[\"typeid\"])\n        assert len(x[\"title_ids\"]) == len(x[\"titles\"])\n        for z in range(len(x[\"titles\"])):\n            print(\"title:\",x[\"titles\"][z],\"title_id\",x[\"title_ids\"][z])\n#def \ndef print_act(a):\n    for x in a:\n        print(\"id:\",x[\"id\"],\"name:\",x[\"name\"],\"type\",x[\"type\"],\"protocol:\",x[\"protocol\"])\ndef print_ind(d):\n    for x in d:\n        print(\"id:\",x[\"id\"],\"name:\",x[\"name\"],\"type\",x[\"type\"])\ndef print_show(d):\n    for x in d:\n        print(\"id:\",x[\"id\"],\"name:\",x[\"name\"],\"type\",x[\"type\"])\ndef checkList(l):\n    p, np = 0, 0\n    for x in l:\n        try:\n            assert type(x) == dict\n            xk = x.keys()\n            assert \"id\" in xk"
        },
        {
            "comment": "The code reads data from a JSON file, checks the validity of the data structure, and extracts specific lists and dictionaries from it. It then performs various functions on these extracted items such as walking through them and printing their contents. The code also keeps track of how many items passed and failed the assertions.",
            "location": "\"/media/root/Prima/works/generated_docs/autoup_doc/src/poster/uploader/extract_channels.py\":35-62",
            "content": "            assert \"name\" in xk\n            assert \"type\" in xk\n            p +=1\n        except:\n            np+=1\n    print(\"passed\",p,\"not passed\",np)\nwith open(\"channels.json\",\"r\") as f:\n    obj = json.loads(f.read())\nassert type(obj) == dict\nd0k = obj.keys()\nassert obj[\"code\"] == 0\ndt = obj[\"data\"]\nd1k = list(dt)\n#['activities', 'adorders', 'fav', 'industry_list', 'myinfo', 'orders', 'prepay', 'season', 'showtype_list', 'staff_activity_conf', 'staff_conf', 'tag_rule', 'tip', 'typelist', 'video_jam', 'watermark']\nlists = [\"activities\",\"adorders\",\"industry_list\",\"showtype_list\",\"typelist\"]\ndicts = [\"fav\",\"myinfo\",\"prepay\",\"staff_activity_conf\",\"staff_conf\",\"tag_rule\",\"tip\",\"video_jam\",\"watermark\"]\n#for x in d1k:\n#    print(x, type(dt[x]))\n#for x in lists:\n#    print(x)\n#    checkList(dt[x])\nwalk_type(dt[\"typelist\"])\nprint_act(dt[\"activities\"])\nprint_ind(dt[\"industry_list\"])\nprint_show(dt[\"showtype_list\"])\nwalk_fav(dt[\"fav\"])\nwalk_staff(dt[\"staff_activity_conf\"])\nwalk_staff(dt[\"staff_conf\"])"
        }
    ]
}